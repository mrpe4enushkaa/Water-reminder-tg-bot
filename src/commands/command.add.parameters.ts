import TelegramBot from "node-telegram-bot-api";
import { Command } from "./abstract.command";

export class AddParametersCommand extends Command {
    constructor(bot: TelegramBot, waitingForWeight: Set<number>) {
        super(bot, waitingForWeight);
    }

    public handle(): void {
        this.bot.onText(/^\/add_parameters$/, (message): void => {
            const chatId = message.chat.id;

            this.waitingForWeight.add(chatId);

            this.bot.sendMessage(chatId, `<b>üíß –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å, —á—Ç–æ–±—ã —è –º–æ–≥ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –≤–æ–¥—ã –Ω–∞ –¥–µ–Ω—å!</b>
                \n<i>–ó–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤ üòä</i>`, {
                parse_mode: "HTML"
            });
        });

        this.bot.on("message", (message): void => {
            const chatId = message.chat.id;

            if (!this.waitingForWeight.has(chatId)) return;

            if (message.text?.startsWith("/")) {
                this.waitingForWeight.delete(chatId);
                return;
            };

            if (this.waitingForWeight.has(chatId)) {
                const weight = parseFloat(message.text || "");

                if (isNaN(weight) || weight <= 0) {
                    this.bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –≤–µ—Å–∞.");
                    return;
                }

                this.waitingForWeight.delete(chatId);

                const waterNorm = (weight * 0.035).toFixed(2);

                this.bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–π –≤–µ—Å: ${weight} –∫–≥.
                    \n–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—É—Ç–æ—á–Ω–∞—è –Ω–æ—Ä–º–∞ –≤–æ–¥—ã: ${waterNorm} –ª–∏—Ç—Ä–æ–≤ üíß`);
            }
        });
    }
}

